{"version":3,"sources":["components/Note/Note.js","App.js","reportWebVitals.js","index.js"],"names":["Note","title","message","className","App","useState","notes","setNotes","id","length","date","Date","toISOString","currentNote","setCurrentNote","map","note","onSubmit","event","preventDefault","noteToAdd","concat","alert","type","placeholder","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oQAGaA,EAAO,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAG3B,OACE,sBAAKC,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBF,IACvB,mBAAGE,UAAU,UAAb,SAAwBD,QC4DfE,MAhEf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGA,EAAsCF,mBACpC,CACEG,GAAIF,EAAMG,OAAS,EACnBR,MAAO,GACPC,QAAS,GACTQ,MAAM,IAAIC,MAAOC,gBALrB,mBAAOC,EAAP,KAAoBC,EAApB,KAuCA,OACE,sBAAKX,UAAU,MAAf,UAGEG,EAAMG,OAAS,EACfH,EAAMS,KAAI,SAAAC,GAAI,OAAK,cAAC,EAAD,CAAoBf,MAAOe,EAAKf,MAAOC,QAASc,EAAKd,SAA1Cc,EAAKR,OACjC,qBAAKL,UAAU,WAAf,wCAIF,uBAAMc,SAzBW,SAACC,GAEpB,GADAA,EAAMC,iBACmB,KAAtBN,EAAYZ,OAAwC,KAAxBY,EAAYX,QAAe,CAC1D,IAAMkB,EAAS,2BACVP,GADU,IAEbL,GAAIF,EAAMG,OAAS,EACnBC,MAAM,IAAIC,MAAOC,gBAEnBL,EAASD,EAAMe,OAAOD,SAEtBE,MAAO,4CAeL,UACE,uBAAOC,KAAK,OAAOC,YAAY,QAAQC,MAAOZ,EAAYZ,MAAOyB,SAzC7C,SAAAR,GACxBJ,EAAe,2BACVD,GADS,IAEZZ,MAAOiB,EAAMS,OAAOF,YAuClB,uBAAOF,KAAK,OAAOC,YAAY,kBAAkBC,MAAOZ,EAAYX,QAASwB,SAlCvD,SAAAR,GAC1BJ,EAAe,2BACVD,GADS,IAEZX,QAASgB,EAAMS,OAAOF,YAgCpB,qDClDOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.add215ad.chunk.js","sourcesContent":["import './Note.css'\n\n\nexport const Note = ({title, message}) => {\n\n\n  return (\n    <div className=\"Note\">\n      <h1 className=\"title\">{title}</h1>\n      <p className=\"message\">{message}</p>\n    </div>\n\n  )\n}\n\n","import './App.css';\nimport {Note} from './components/Note/Note.js'\nimport {useState} from 'react';\n\n\nfunction App() {\n  // Array con todas las notas (objetos) inputeadas\n  const [notes, setNotes] = useState([]);\n\n  // Nota que se esta inputeando en cada momento\n  const [currentNote, setCurrentNote] = useState(\n    {\n      id: notes.length + 1 ,\n      title: '',\n      message: '',\n      date: new Date().toISOString()\n    }\n  );\n\n  const handleTitleChange = event => {\n    setCurrentNote({\n      ...currentNote,\n      title: event.target.value\n    });\n  };\n\n\n  const handleMessageChange = event => {\n    setCurrentNote({\n      ...currentNote,\n      message: event.target.value\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(currentNote.title !== '' && currentNote.message !== ''){\n    const noteToAdd = {\n      ...currentNote,\n      id: notes.length + 1,\n      date: new Date().toISOString()\n    };\n    setNotes(notes.concat(noteToAdd))\n  } else {\n    alert ('You need to input a title and a message')\n  }\n\n  }\n\n  return (\n    <div className=\"App\">\n      \n      {\n      notes.length > 0 ?\n      notes.map(note => (<Note key={note.id} title={note.title} message={note.message} />))\n      : <div className=\"no-notes\"> No hay notas que mostrar </div>\n      \n      }\n\n      <form onSubmit={handleSubmit}>\n        <input type='text' placeholder='Title' value={currentNote.title} onChange={handleTitleChange} />\n        <input type='text' placeholder='Write your note' value={currentNote.message} onChange={handleMessageChange} />\n        <button>Add Note</button>\n      </form>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}